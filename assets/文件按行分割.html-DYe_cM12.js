import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-CssyecMx.js";const p={},e=t(`<h1 id="三-文件分割" tabindex="-1"><a class="header-anchor" href="#三-文件分割"><span>三. 文件分割</span></a></h1><div class="hint-container tip"><p class="hint-container-title">场景说明</p><ol><li>将一个一定数量的文件，按照指定的数量进行分割，并保存为若干个指定数量的文件</li><li>例如：a.txt \\ a.xslx文件内有1000行数据，运行程序并输入需要进行分割的数量500。</li><li>结果：原文件保持不变，并分割得到 Data1.txt 、Data2.txt ,每个文件包含数据500个</li></ol></div><h2 id="_1-txt文件按行分割" tabindex="-1"><a class="header-anchor" href="#_1-txt文件按行分割"><span>1. TXT文件按行分割</span></a></h2><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><strong>./DonefilePath/</strong></td><td><strong>str</strong></td><td>转换后的文件路径</td></tr><tr><td><strong>splitLine</strong></td><td><strong>int</strong></td><td>每个文件分割的数量</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>filepath <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;文件名：&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;.txt&quot;</span>
splitLine <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;进行分割的行数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># filepath = &quot;10w.txt&quot;</span>
<span class="token comment"># splitLine = 6000   #指定的拆分行数</span>

open_diff <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 源文本文件</span>
diff_line <span class="token operator">=</span> open_diff<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>

line_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> line <span class="token keyword">in</span> diff_line<span class="token punctuation">:</span>
    line_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">)</span>

count <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>line_list<span class="token punctuation">)</span> <span class="token comment"># 文件行数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;源文件数据行数：&#39;</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span>

<span class="token comment"># 切分diff</span>
diff_match_split <span class="token operator">=</span> <span class="token punctuation">[</span>line_list<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>splitLine<span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>line_list<span class="token punctuation">)</span><span class="token punctuation">,</span>splitLine<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># 每个文件的数据行数</span>

<span class="token comment"># 将切分的写入多个txt中</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>count<span class="token operator">/</span>splitLine<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>count<span class="token operator">/</span>splitLine<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 写入txt，计算需要写入的文件数</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;./DonefilePath/Data%d.txt&#39;</span><span class="token operator">%</span> j<span class="token punctuation">,</span><span class="token string">&#39;w+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> temp<span class="token punctuation">:</span>
        <span class="token keyword">for</span> line <span class="token keyword">in</span> diff_match_split<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>
            temp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;拆分后文件的个数：&#39;</span><span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-excel文件按行分割" tabindex="-1"><a class="header-anchor" href="#_2-excel文件按行分割"><span>2. Excel文件按行分割</span></a></h2><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><strong>./DoneExcelPath/</strong></td><td><strong>str</strong></td><td>转换后的文件路径</td></tr><tr><td><strong>limit</strong></td><td><strong>int</strong></td><td>每个文件分割的数量</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#需要安装 openpyxl </span>
<span class="token keyword">import</span> openpyxl <span class="token keyword">as</span> openpyxl

<span class="token comment">#填入文件名</span>
excel_name_input<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;填写excel文件名称，限定为.xlsx格式： &quot;</span><span class="token punctuation">)</span>
excel_name_open<span class="token operator">=</span>excel_name_input<span class="token operator">+</span><span class="token string">&quot;.xlsx&quot;</span>
limit<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;进行分割的行数： &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#总共需要多少excel</span>

<span class="token comment"># 读取对应excel文件，应加入错误提示，待优化</span>
workbook<span class="token operator">=</span>openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>filename<span class="token operator">=</span>excel_name_open<span class="token punctuation">)</span>
sheet_origin <span class="token operator">=</span> workbook<span class="token punctuation">.</span>active  <span class="token comment">#获取活跃的表格</span>

<span class="token comment">#获取原表格中限定条数据，并复制到新表格</span>

nrows <span class="token operator">=</span> sheet_origin<span class="token punctuation">.</span>max_row  <span class="token comment"># 最大行数</span>
ncols <span class="token operator">=</span> sheet_origin<span class="token punctuation">.</span>max_column  <span class="token comment"># 最大列数</span>

sheets <span class="token operator">=</span> nrows <span class="token operator">/</span> limit
<span class="token keyword">if</span> <span class="token keyword">not</span> sheets<span class="token punctuation">.</span>is_integer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment">#如果不是整除则需要+1</span>
	sheets <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sheets<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>sheets<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	wb <span class="token operator">=</span>openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
	sheet <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">&#39;Sheet&#39;</span><span class="token punctuation">]</span>
	<span class="token comment"># 写入第一行数据</span>
	<span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>ncols<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>column<span class="token operator">=</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span>sheet_origin<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>column<span class="token operator">=</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>value
	<span class="token comment"># 写入范围内数据</span>
	t<span class="token operator">=</span><span class="token number">2</span><span class="token operator">+</span>limit<span class="token operator">*</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
	num_index<span class="token operator">=</span><span class="token number">2</span>
	<span class="token keyword">for</span> row_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>t<span class="token operator">+</span>limit<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">for</span> col_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>ncols<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>
			sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token operator">=</span>num_index<span class="token punctuation">,</span>column<span class="token operator">=</span>col_num<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span>sheet_origin<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token operator">=</span>row_num<span class="token punctuation">,</span>column<span class="token operator">=</span>col_num<span class="token punctuation">)</span><span class="token punctuation">.</span>value
		num_index<span class="token operator">=</span>num_index<span class="token operator">+</span><span class="token number">1</span>

	wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&quot;./DoneExcelPath/{excelname}.xlsx&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>excelname<span class="token operator">=</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;已完成数据拆分&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function l(c,i){return s(),a("div",null,o)}const k=n(p,[["render",l],["__file","文件按行分割.html.vue"]]),d=JSON.parse('{"path":"/Python%E8%84%9A%E6%9C%AC%E7%9B%B8%E5%85%B3/%E6%96%87%E4%BB%B6%E6%8C%89%E8%A1%8C%E5%88%86%E5%89%B2.html","title":"三. 文件分割","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. TXT文件按行分割","slug":"_1-txt文件按行分割","link":"#_1-txt文件按行分割","children":[]},{"level":2,"title":"2. Excel文件按行分割","slug":"_2-excel文件按行分割","link":"#_2-excel文件按行分割","children":[]}],"readingTime":{"minutes":1.84,"words":553},"filePathRelative":"Python脚本相关/文件按行分割.md","git":{"updatedTime":1681111454000,"contributors":[{"name":"unknown","email":"chenzk14","commits":1}]}}');export{k as comp,d as data};
