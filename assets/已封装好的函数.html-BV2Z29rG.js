import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as k,c as d,a as n,b as s,d as o,w as a,e as p}from"./app-CssyecMx.js";const v={},m=p('<h1 id="lua-触动精灵" tabindex="-1"><a class="header-anchor" href="#lua-触动精灵"><span>LUA - 触动精灵</span></a></h1><h4 id="平时项目里封装的一些较实用的函数以及一些小技巧" tabindex="-1"><a class="header-anchor" href="#平时项目里封装的一些较实用的函数以及一些小技巧"><span>平时项目里封装的一些较实用的函数以及一些小技巧</span></a></h4><h2 id="界面-ui-函数" tabindex="-1"><a class="header-anchor" href="#界面-ui-函数"><span>界面 - UI 函数</span></a></h2>',3),b={class:"hint-container tip"},g=n("p",{class:"hint-container-title"},"函数总览",-1),f={href:"https://helpdoc.touchsprite.com/dev_docs/12/2.html",target:"_blank",rel:"noopener noreferrer"},w=p(`<div class="hint-container warning"><p class="hint-container-title">需要注意的是</p><p>当前函数引入到main程序之后，所有和有关界面的参数都必须带上自定义的前缀，例如我这里定义：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>local MyJsonString = cjson.encode(MyTable);
UIret,values = showUI(MyJsonString)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>那么接下来我所有和界面有关的ID都需要带上 <strong>values</strong>, 例如：<code>values.脚本功能</code></p></div>`,1),h=p(`<div class="hint-container tip"><p class="hint-container-title">使用:</p><p><strong>1.函数如下,保存为 <strong><code>界面.lua</code></strong></strong></p><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">local</span> cjson <span class="token operator">=</span> ts<span class="token punctuation">.</span>json
w<span class="token punctuation">,</span>h <span class="token operator">=</span> <span class="token function">getScreenSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
MyTable <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token string">&quot;style&quot;</span><span class="token punctuation">]</span>  <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> w<span class="token punctuation">,</span>          
    <span class="token punctuation">[</span><span class="token string">&quot;height&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">,</span>            
    <span class="token punctuation">[</span><span class="token string">&quot;cancelname&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;取消&quot;</span><span class="token punctuation">,</span>  
    <span class="token punctuation">[</span><span class="token string">&quot;okname&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;运行&quot;</span><span class="token punctuation">,</span> 
    <span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;XX脚本&quot;</span><span class="token punctuation">,</span>  <span class="token comment">--标题栏文字</span>
    <span class="token punctuation">[</span><span class="token string">&quot;titlealign&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span>  <span class="token comment">--title 对齐方式，默认左对齐</span>
    <span class="token punctuation">[</span><span class="token string">&quot;align&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span> 
    <span class="token punctuation">[</span><span class="token string">&quot;titlesize&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span>  
    <span class="token punctuation">[</span><span class="token string">&quot;titles&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;参数设置,其他设置,免责声明&quot;</span><span class="token punctuation">,</span> 
    <span class="token punctuation">[</span><span class="token string">&quot;pagetype&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token string">&quot;multi&quot;</span><span class="token punctuation">,</span>   <span class="token comment">--多页模式</span>
    <span class="token punctuation">[</span><span class="token string">&quot;selpage&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token comment">--多页模式下指定默认停留的页面</span>
    <span class="token punctuation">[</span><span class="token string">&quot;orient&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment">--指定 UI 界面显示方向</span>
    <span class="token punctuation">[</span><span class="token string">&quot;btnbkcolor&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;255,255,255&quot;</span><span class="token punctuation">,</span>         
    <span class="token punctuation">[</span><span class="token string">&quot;bgcolor&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;255,255,255&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&quot;pagenumtype&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;tab&quot;</span><span class="token punctuation">,</span> <span class="token comment">--页码样式，dot - 小圆点， number - 数字， default - 不显示，tab - 底部不显示页码样式，</span>
    <span class="token punctuation">[</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;peizhi.txt&quot;</span><span class="token punctuation">,</span>  
    <span class="token comment">--[&quot;timer&quot;] = 120,  </span>
    <span class="token punctuation">[</span><span class="token string">&quot;rettype&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;table&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&quot;bg&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;twbg.png&quot;</span><span class="token punctuation">,</span>  <span class="token comment">--背景图</span>
    pages       <span class="token operator">=</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">{</span> 
            <span class="token punctuation">{</span>
                <span class="token punctuation">[</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Label&quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span><span class="token string">&quot;align&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;脚本功能:&quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span><span class="token string">&quot;size&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> 
                <span class="token punctuation">[</span><span class="token string">&quot;align&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span>          
                <span class="token punctuation">[</span><span class="token string">&quot;valign&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span> 
                <span class="token punctuation">[</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;0,0,0&quot;</span><span class="token punctuation">,</span>           
                <span class="token punctuation">[</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span><span class="token string">&quot;nowrap&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token punctuation">[</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;ComboBox&quot;</span><span class="token punctuation">,</span>            
                <span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;脚本功能&quot;</span><span class="token punctuation">,</span>                      
                <span class="token punctuation">[</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;功能1,功能2,----更多可定制功能----&quot;</span><span class="token punctuation">,</span>   
                <span class="token punctuation">[</span><span class="token string">&quot;select&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>                  	 <span class="token comment">-- 选填，0，默认选中项 id</span>
                <span class="token punctuation">[</span><span class="token string">&quot;scale&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.15</span><span class="token punctuation">,</span>                    <span class="token comment">-- 选填，1，图片缩放比例</span>
                <span class="token punctuation">[</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span><span class="token string">&quot;countperline&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>			
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">local</span> MyJsonString <span class="token operator">=</span> cjson<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>MyTable<span class="token punctuation">)</span><span class="token punctuation">;</span>
UIret<span class="token punctuation">,</span>values <span class="token operator">=</span> <span class="token function">showUI</span><span class="token punctuation">(</span>MyJsonString<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 使用main调用</strong></p><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;TSLib&quot;</span><span class="token punctuation">)</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;界面&quot;</span><span class="token punctuation">)</span>  
json <span class="token operator">=</span> ts<span class="token punctuation">.</span>json  <span class="token comment">--使用 JSON 模块前必须插入这一句</span>
<span class="token keyword">if</span> UIret <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">then</span>
	<span class="token comment">-- 脚本逻辑</span>
<span class="token keyword">else</span>
	<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;取消操作&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token keyword">false</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="防lua卡流程-以及-协程函数" tabindex="-1"><a class="header-anchor" href="#防lua卡流程-以及-协程函数"><span>防lua卡流程 以及 协程函数</span></a></h2><div class="hint-container tip"><p class="hint-container-title">该方法的主要作用：</p><p>为了解决在运行触动精灵时遇到不识别的界面或者文字导致流程卡死不继续的问题</p><div class="hint-container warning"><p class="hint-container-title">一些参数的说明</p><p><strong>数量</strong>- 运行的参数，可为其他</p><p><strong>流程()</strong> - 你的主要程序，可以将main文件内的流程封装成一个主要函数，再通过以下方法控制流程</p><p><strong>时间间隔</strong> - 可选</p><p><strong>防卡倒计时</strong> - 这里可以写死，也可以在ui界面里面自定义</p></div></div><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token comment">-------------防卡-------------------------</span>
<span class="token keyword">for</span> var <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> values<span class="token punctuation">.</span>注册数量 <span class="token keyword">do</span>
	<span class="token keyword">local</span> thread_id <span class="token operator">=</span> thread<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
		<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			流程<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">--你的脚本程序</span>
		<span class="token keyword">end</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
			callBack <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token comment">--协程结束会调用，不论是错误、异常、正常结束</span>
				<span class="token comment">--toast(&quot;结束了&quot;)</span>
			<span class="token keyword">end</span><span class="token punctuation">,</span>
			catchBack <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span>
				<span class="token comment">--协程异常结束,异常是脚本调用了 throw 激发的，exp 是 table,exp.message 是异常原因</span>
				<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;超时或异常,脚本结束&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">end</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
	
	<span class="token comment">---------------------下面是倒计时，通过全局变量1调用------------------</span>
	<span class="token keyword">local</span> 防卡倒计时
	<span class="token keyword">local</span> 注册等待 <span class="token operator">=</span> values<span class="token punctuation">.</span>注册间隔 <span class="token operator">*</span> <span class="token number">1000</span>
	<span class="token keyword">for</span> ii<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> values<span class="token punctuation">.</span>防卡时间<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">do</span>
		防卡倒计时<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span>防卡时间<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">-</span> ii <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span>
<span class="token comment">-- 		toast(&quot;防卡倒计时：&quot;..防卡倒计时, 1)</span>
		<span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> 全局变量<span class="token number">1</span><span class="token operator">==</span><span class="token number">1</span> <span class="token keyword">then</span>
		    <span class="token keyword">local</span> 计时单位
		    <span class="token keyword">if</span> <span class="token function">tonumber</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span>注册间隔<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">60</span> <span class="token keyword">then</span>
		        计时单位 <span class="token operator">=</span> <span class="token string">&quot;秒&quot;</span>
		        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;注册成功，重新计时，等待&#39;</span><span class="token operator">..</span> values<span class="token punctuation">.</span>注册间隔 <span class="token operator">..</span>计时单位<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
		    <span class="token keyword">else</span>
		        计时单位 <span class="token operator">=</span> <span class="token string">&quot;分钟&quot;</span>
		        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;注册成功，重新计时，等待&#39;</span><span class="token operator">..</span><span class="token punctuation">(</span><span class="token punctuation">(</span>注册等待<span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token operator">..</span>计时单位<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
		    <span class="token keyword">end</span>
			<span class="token function">mSleep</span><span class="token punctuation">(</span>注册等待<span class="token punctuation">)</span>   <span class="token comment">-- 注册完成等待</span>
			<span class="token keyword">break</span>
		<span class="token keyword">elseif</span> 全局变量<span class="token number">1</span><span class="token operator">==</span><span class="token number">2</span> <span class="token keyword">then</span>
		    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;注册异常，脚本重新开始&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token keyword">end</span>
		<span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> ii<span class="token operator">==</span>values<span class="token punctuation">.</span>防卡时间<span class="token operator">/</span><span class="token number">10</span> <span class="token keyword">then</span>
			<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;超时！脚本重新开始&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
			全局变量<span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span>
		<span class="token keyword">end</span>
	<span class="token keyword">end</span>
	<span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
	thread<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>thread_id<span class="token punctuation">)</span>
	<span class="token comment">--等待所有协程结束</span>
	thread<span class="token punctuation">.</span><span class="token function">waitAllThreadExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
	全局变量<span class="token number">1</span><span class="token operator">=</span><span class="token number">0</span>
	<span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="界面识别" tabindex="-1"><a class="header-anchor" href="#界面识别"><span>界面识别</span></a></h2><h3 id="文字识别" tabindex="-1"><a class="header-anchor" href="#文字识别"><span>文字识别</span></a></h3><div class="hint-container tip"><p class="hint-container-title">文字识别</p><p>文字识别的方法较为简单，只需要一行代码。</p><p>使用：ocrText(顶部坐标,底部坐标,0)</p><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">local</span> ocr_Create <span class="token operator">=</span> <span class="token function">ocrText</span><span class="token punctuation">(</span><span class="token number">142</span><span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">,</span><span class="token number">603</span><span class="token punctuation">,</span><span class="token number">259</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment">--识别 XXX 文字   0代表识别英文数字，1代表识别中文汉字</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这也是我后期开发常用的方法，对于一些APP的界面识别很实用！</p></div><h3 id="界面特征识别" tabindex="-1"><a class="header-anchor" href="#界面特征识别"><span>界面特征识别</span></a></h3><div class="hint-container tip"><p class="hint-container-title">界面特征识别较为复杂，分多步骤进行</p><ol><li><strong>首先创建一个用于装载界面特征的table</strong></li></ol><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">function</span> 检索界面<span class="token punctuation">(</span>界面列表<span class="token punctuation">)</span>         <span class="token comment">--返回界面名字(文本)</span>
    <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> <span class="token function">pairs</span><span class="token punctuation">(</span>界面列表<span class="token punctuation">)</span> <span class="token keyword">do</span>
        x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token function">findMultiColorInRegionFuzzy</span><span class="token punctuation">(</span>
            v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> x<span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> y<span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">then</span>
            <span class="token function">toast</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> v<span class="token punctuation">.</span>界面特征<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">end</span>
    <span class="token keyword">end</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;未知界面&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&#39;未知界面&#39;</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>使用触动官方开发工具，抓取界面的特征并创建界面特征表</strong></li></ol><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code>XXXXX界面<span class="token operator">=</span><span class="token punctuation">{</span>
	界面特征<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;XXXXX界面&#39;</span><span class="token punctuation">,</span><span class="token number">0x1d9bf0</span><span class="token punctuation">,</span> <span class="token string">&quot;-12|44|0xffffff,-267|272|0x0f1419,-292|344|0x0f1419,-211|922|0x1d9bf0,-127|916|0xffffff&quot;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">748</span><span class="token punctuation">,</span> <span class="token number">1128</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

界面列表 <span class="token operator">=</span> <span class="token punctuation">{</span>XXXXX界面<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>最后调用函数识别进行界面判断</strong></li></ol><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">local</span> 当前界面 <span class="token operator">=</span> 检索界面<span class="token punctuation">(</span>界面列表<span class="token punctuation">)</span>
 <span class="token keyword">if</span> 当前界面 <span class="token operator">==</span> <span class="token string">&quot;XXXXX界面&quot;</span>  <span class="token keyword">then</span>
    <span class="token comment">--其他操作</span>
 <span class="token keyword">else</span>
    <span class="token comment">--其他操作</span>
 <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,9),y={id:"时间的获取-很遗憾-依然不好用",tabindex:"-1"},q={class:"header-anchor",href:"#时间的获取-很遗憾-依然不好用"},_=p(`<div class="hint-container tip"><p class="hint-container-title">为什么提到时间的问题</p><p>先说说需求，我需要得到 <strong>今天的时间</strong> 和 <strong>隔天（或者隔几天）</strong> 的时间</p><p>关于时间，其实触动精灵官方文档里面就有说明，但是很简洁，导致我在开发某邮箱项目过程中，在获取开始时间和结束时间时碰到了以下问题，为此专门记录一下</p><div class="hint-container warning"><p class="hint-container-title">问题如下：</p><ol><li>时间偏移程度较夸张，最夸张一次是获取到了本机的初始时间 【1791-06-08】</li><li>时间无法自动校准为当月的大小月时间，于是引发了小月的天数只有30天，但是隔天却有31天的问题【2022-09-31】</li></ol></div></div><ol><li>先定义时间格式的函数</li></ol><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">function</span> <span class="token function">getNewDate</span><span class="token punctuation">(</span>srcDateTime<span class="token punctuation">,</span>interval <span class="token punctuation">,</span>dateUnit<span class="token punctuation">)</span>    <span class="token comment">--设置时间</span>
    <span class="token comment">--从日期字符串中截取出年月日时分秒</span>
    <span class="token keyword">local</span> Y <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>srcDateTime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> M <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>srcDateTime<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> D <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>srcDateTime<span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> H <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>srcDateTime<span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> MM <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>srcDateTime<span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> SS <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>srcDateTime<span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span>
    <span class="token comment">--把日期时间字符串转换成对应的日期时间</span>
    <span class="token keyword">local</span> dt1 <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">{</span>year<span class="token operator">=</span>Y<span class="token punctuation">,</span> month<span class="token operator">=</span>M<span class="token punctuation">,</span> day<span class="token operator">=</span>D<span class="token punctuation">,</span> hour<span class="token operator">=</span>H<span class="token punctuation">,</span>min<span class="token operator">=</span>MM<span class="token punctuation">,</span>sec<span class="token operator">=</span>SS<span class="token punctuation">}</span>
    
    <span class="token comment">--根据时间单位和偏移量得到具体的偏移数据</span>
    
        <span class="token keyword">local</span> ofset<span class="token operator">=</span><span class="token number">0</span>
        
        <span class="token keyword">if</span> dateUnit<span class="token operator">==</span><span class="token string">&#39;DAY&#39;</span> <span class="token keyword">then</span>
            ofset <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> interval
        <span class="token keyword">elseif</span> dateUnit <span class="token operator">==</span> <span class="token string">&#39;HOUR&#39;</span> <span class="token keyword">then</span>
            ofset <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span><span class="token number">60</span> <span class="token operator">*</span> interval
        <span class="token keyword">elseif</span> dateUnit <span class="token operator">==</span> <span class="token string">&#39;MINUTE&#39;</span> <span class="token keyword">then</span>
            ofset <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> interval
        <span class="token keyword">elseif</span> dateUnit <span class="token operator">==</span> <span class="token string">&#39;SECOND&#39;</span> <span class="token keyword">then</span>
            ofset <span class="token operator">=</span> interval
        <span class="token keyword">end</span>
    <span class="token comment">--指定的时间+时间偏移量</span>
        <span class="token keyword">local</span> newTime <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;*t&quot;</span><span class="token punctuation">,</span> dt1 <span class="token operator">+</span> <span class="token function">tonumber</span><span class="token punctuation">(</span>ofset<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> newTime
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在进行时间格式转换，然后得到时间 (我这里以洛杉矶的时间为基准)</li></ol><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">for</span> var<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span> <span class="token keyword">do</span>
    tim <span class="token operator">=</span> <span class="token function">getNetTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		            <span class="token comment">--当前手机系统的时间</span>
    time_year <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;%Y&quot;</span><span class="token punctuation">,</span>tim<span class="token punctuation">)</span>			<span class="token comment">--格式化 time 值获取年份</span>
    time_M <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;%m&quot;</span><span class="token punctuation">,</span>tim<span class="token punctuation">)</span> 		 	    <span class="token comment">--格式化 time 值获取月份</span>
    time_D <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span>tim<span class="token punctuation">)</span> 		 	    <span class="token comment">--格式化 time 值获取天</span>
    time_当前_H <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;%H&quot;</span><span class="token punctuation">,</span>tim<span class="token punctuation">)</span> 		<span class="token comment">--格式化 time 值获取小时</span>
    
    
    time_北京_H <span class="token operator">=</span> time_当前_H<span class="token operator">+</span><span class="token number">15</span>                     <span class="token comment">--洛杉矶时区  +15小时   转化为北京时间</span>

    <span class="token keyword">if</span> time_北京_H <span class="token operator">&gt;</span> <span class="token number">24</span> <span class="token keyword">then</span>                    <span class="token comment">-- H 超过24小时，则日期增加一天</span>
        time_HZ <span class="token operator">=</span> time_北京_H<span class="token operator">-</span><span class="token number">15</span>
        time_DM <span class="token operator">=</span> time_D<span class="token operator">+</span><span class="token number">1</span>
    <span class="token keyword">elseif</span> time_北京_H <span class="token operator">&lt;=</span> <span class="token number">24</span> <span class="token keyword">then</span>                   <span class="token comment">--小于等于24则表示为当天</span>
        time_HZ <span class="token operator">=</span> time_北京_H
        time_DM <span class="token operator">=</span> time_D
    <span class="token keyword">else</span>
        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;时间格式有误&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span>
    
    <span class="token keyword">if</span> string<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span>time_DM<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span>  <span class="token keyword">then</span>       <span class="token comment">--当日期字符串长度小于2位数时，则添加 “0” ，示例 1 --&gt; 01，否则保持默认</span>
        time_DM <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token operator">..</span>time_DM
        <span class="token comment">--dialog(&quot;当前日期：&quot;..time_DM)</span>
    <span class="token keyword">else</span>     
        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;获取开始时间失败&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span>
    
    start_timeall <span class="token operator">=</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-&quot;</span><span class="token operator">..</span> time_DM<span class="token operator">..</span> <span class="token string">&quot; &quot;</span> <span class="token operator">..</span> time_HZ<span class="token operator">..</span><span class="token string">&quot;:%M:%S&quot;</span><span class="token punctuation">,</span>tim<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">-- 2022-10-08 16:11:11</span>
    start_timeall_gsub <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">gsub</span><span class="token punctuation">(</span>start_timeall<span class="token punctuation">,</span><span class="token string">&quot;%p&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>   <span class="token comment">-- 20221008 16:11:11</span>
    start_time <span class="token operator">=</span> <span class="token punctuation">(</span>start_timeall<span class="token punctuation">:</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment">-- 2022-10-08</span>

    <span class="token keyword">local</span> oldTime<span class="token operator">=</span>start_timeall_gsub<span class="token punctuation">:</span><span class="token function">atrim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">--去除时间空格</span>
    
    <span class="token comment">--把指定的时间加1天</span>
    <span class="token keyword">local</span> newTime<span class="token operator">=</span><span class="token function">getNewDate</span><span class="token punctuation">(</span>oldTime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;DAY&#39;</span><span class="token punctuation">)</span> 
    <span class="token keyword">local</span> end_time_all <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;%d&#39;</span><span class="token operator">..</span><span class="token string">&#39;-&#39;</span><span class="token operator">..</span><span class="token string">&#39;%02d&#39;</span><span class="token operator">..</span><span class="token string">&#39;-&#39;</span><span class="token operator">..</span><span class="token string">&#39;%02d&#39;</span><span class="token operator">..</span><span class="token string">&quot; &quot;</span><span class="token operator">..</span><span class="token string">&#39;%02d%02d%02d&#39;</span><span class="token punctuation">,</span>newTime<span class="token punctuation">.</span>year<span class="token punctuation">,</span>newTime<span class="token punctuation">.</span>month<span class="token punctuation">,</span>newTime<span class="token punctuation">.</span>day<span class="token punctuation">,</span>newTime<span class="token punctuation">.</span>hour<span class="token punctuation">,</span>newTime<span class="token punctuation">.</span>min<span class="token punctuation">,</span>newTime<span class="token punctuation">.</span>sec<span class="token punctuation">)</span>
    end_time <span class="token operator">=</span> end_time_all<span class="token punctuation">:</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;start_time=&quot;</span><span class="token operator">..</span>start_time<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;end_time=&#39;</span><span class="token operator">..</span>end_time<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> start_time <span class="token operator">~=</span><span class="token string">&quot;&quot;</span> <span class="token keyword">and</span> end_time <span class="token operator">~=</span><span class="token string">&quot;&quot;</span> <span class="token keyword">and</span> time_year <span class="token operator">==</span> <span class="token string">&quot;2022&quot;</span> <span class="token keyword">then</span>
        <span class="token keyword">break</span>
    <span class="token keyword">elseif</span> start_time <span class="token operator">~=</span><span class="token string">&quot;&quot;</span> <span class="token keyword">and</span> end_time <span class="token operator">~=</span><span class="token string">&quot;&quot;</span> <span class="token keyword">and</span> time_year <span class="token operator">~=</span> <span class="token string">&quot;2022&quot;</span> <span class="token keyword">then</span>
        <span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string">&quot;获取时间失败,请检查当前网络：&quot;</span><span class="token operator">..</span>start_time<span class="token operator">..</span><span class="token string">&quot;-&quot;</span><span class="token operator">..</span>end_time<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span>
        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;获取时间失败&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">结果</p><p>最后得到的时间格式为：start_time = [2022-10-08], end_time = [2022-10-09]</p></div><h2 id="内容上传" tabindex="-1"><a class="header-anchor" href="#内容上传"><span>内容上传</span></a></h2><div class="hint-container tip"><p class="hint-container-title">内容上传</p><p>关于上传，我这里使用了两种方法，如果碰到某方式无法上传，可以交换使用</p></div>`,8),x=n("div",{class:"language-lua line-numbers-mode","data-ext":"lua","data-title":"lua"},[n("pre",{class:"language-lua"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(" 上传"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

    header_send `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s("typeget "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"iOS"'),n("span",{class:"token punctuation"},"}"),s(`

    body_send `),n("span",{class:"token operator"},"="),s(` 内容

    ts`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setHttpsTimeOut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"60"),n("span",{class:"token punctuation"},")"),s(`

    code`),n("span",{class:"token punctuation"},","),s("status_resp"),n("span",{class:"token punctuation"},","),s(" body_resp "),n("span",{class:"token operator"},"="),s(" ts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"httpsPost"),n("span",{class:"token punctuation"},"("),s("上传地址"),n("span",{class:"token punctuation"},","),s(" header_send"),n("span",{class:"token punctuation"},","),s(" body_send"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token function"},"tostring"),n("span",{class:"token punctuation"},"("),s("code"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"200"'),s(),n("span",{class:"token keyword"},"then"),s(`

        `),n("span",{class:"token function"},"toast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"上传成功."'),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"else"),s(`

        `),n("span",{class:"token function"},"toast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"上传失败!"'),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"end"),s(`

`),n("span",{class:"token keyword"},"end"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("p",null,null,-1),D=n("div",{class:"language-lua line-numbers-mode","data-ext":"lua","data-title":"lua"},[n("pre",{class:"language-lua"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(" 上传"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"local"),s(" url "),n("span",{class:"token operator"},"="),s(` 上传地址

    `),n("span",{class:"token keyword"},"local"),s(" data "),n("span",{class:"token operator"},"="),s(` 内容

    `),n("span",{class:"token keyword"},"local"),s(" options "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`

        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"tstab"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"-- 必填项"),s(`

        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"timeOut"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"90"),n("span",{class:"token punctuation"},","),s(`

        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"urlEnCode"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"false"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`

    返回值 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"httpPost"),n("span",{class:"token punctuation"},"("),s("url"),n("span",{class:"token punctuation"},","),s(" data"),n("span",{class:"token punctuation"},","),s("options"),n("span",{class:"token punctuation"},")"),s(`  


    `),n("span",{class:"token keyword"},"if"),s(" 返回值 "),n("span",{class:"token keyword"},"and"),s(" 返回值 "),n("span",{class:"token operator"},"~="),s(),n("span",{class:"token string"},'""'),s(),n("span",{class:"token keyword"},"then"),s(`

        `),n("span",{class:"token function"},"toast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"上传成功！"'),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"else"),s(`

        `),n("span",{class:"token function"},"toast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"上传失败！！！"'),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"end"),s(`

`),n("span",{class:"token keyword"},"end"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=p(`<h2 id="文档操作" tabindex="-1"><a class="header-anchor" href="#文档操作"><span>文档操作</span></a></h2><h3 id="删除首行" tabindex="-1"><a class="header-anchor" href="#删除首行"><span>删除首行</span></a></h3><div class="hint-container tip"><p class="hint-container-title">删除首行流程说明</p><ol><li><p>流程分为三步：</p><ol><li>读取文件内容</li><li>写入文件到table</li><li>读取第一行并删除，再次写入文件到table，最后写入到文件并保存</li></ol></li><li><p>每次运行删除文件的首行内容，具体使用场景可根据自身需求来使用，我一般是用于账号的批量化登录</p></li></ol></div><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token comment">-------删除首行：先读取文件到table，然后修改，再清除文件内容，最后重载写入到文件</span>
<span class="token keyword">function</span> 读取文本<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
	<span class="token keyword">local</span> fileTab <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token keyword">local</span> line <span class="token operator">=</span> file<span class="token punctuation">:</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">while</span> line <span class="token keyword">do</span>
		<span class="token comment">--dialog(&quot;获取行数据&quot;..line)</span>
		table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>fileTab<span class="token punctuation">,</span>line<span class="token punctuation">)</span>
		line <span class="token operator">=</span> file<span class="token punctuation">:</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">end</span>
	<span class="token keyword">return</span> fileTab
<span class="token keyword">end</span>

<span class="token keyword">function</span> 写入文件<span class="token punctuation">(</span>file<span class="token punctuation">,</span>fileTab<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token punctuation">,</span> line <span class="token keyword">in</span> <span class="token function">pairs</span><span class="token punctuation">(</span>fileTab<span class="token punctuation">)</span> <span class="token keyword">do</span>
<span class="token comment">-- 		toast(&quot;开始写入&quot;..line)</span>
		file<span class="token punctuation">:</span><span class="token function">write</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span>
		file<span class="token punctuation">:</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> 删除首行<span class="token punctuation">(</span>需要删除文件的路径<span class="token punctuation">)</span>
	<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;开始删除首行&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">local</span> 打开文件 <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>需要删除文件的路径<span class="token punctuation">)</span>
	<span class="token keyword">if</span> 打开文件 <span class="token keyword">then</span>
		<span class="token keyword">local</span> tab <span class="token operator">=</span> 读取文本<span class="token punctuation">(</span>打开文件<span class="token punctuation">)</span>
		打开文件<span class="token punctuation">:</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		table<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">local</span> 文件替换 <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>需要删除文件的路径<span class="token punctuation">,</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> 文件替换 <span class="token keyword">then</span> 
			写入文件<span class="token punctuation">(</span>文件替换<span class="token punctuation">,</span>tab<span class="token punctuation">)</span>
			文件替换<span class="token punctuation">:</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">end</span>
	<span class="token keyword">else</span>
	    <span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string">&quot;删除失败&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">调用</p><p>直接使用：<code>删除首行(需要删除文件的路径)</code></p></div><h3 id="根据指定格式读取首行并拆分" tabindex="-1"><a class="header-anchor" href="#根据指定格式读取首行并拆分"><span>根据指定格式读取首行并拆分</span></a></h3><div class="hint-container tip"><p class="hint-container-title">读取首行</p><p>更具指定的格式读取首行数据 ， 例如 123456|654321 ，拆分出来为123456----654321</p><p>该方法也是我在批量使用登录时常用的函数</p></div><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token comment">-- 读取文件内容   --将指定文件中的内容按行读取  分隔符 “ | ” 例如 123456|654321</span>
<span class="token comment">-- 使用： 使用方法得到一串数组，然后直接 string[i] 提取数据即可 ，例如：first_string = 获取本地文件()[1]</span>
<span class="token keyword">local</span> ts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;ts&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> 获取本地文件<span class="token punctuation">(</span>文件路径<span class="token punctuation">,</span>分割符号<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
        <span class="token keyword">local</span> file <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> file <span class="token keyword">then</span>
            <span class="token keyword">local</span> _list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> l <span class="token keyword">in</span> file<span class="token punctuation">:</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">do</span>
                table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>_list<span class="token punctuation">,</span>l<span class="token punctuation">)</span>
            <span class="token keyword">end</span>
            file<span class="token punctuation">:</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> _list
        <span class="token keyword">end</span>
    <span class="token keyword">end</span>
    
    <span class="token comment">--检测指定文件是否存在</span>
    <span class="token keyword">function</span> <span class="token function">file_exists</span><span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>
        <span class="token keyword">local</span> f <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>
        <span class="token keyword">return</span> f <span class="token operator">~=</span> <span class="token keyword">nil</span> <span class="token keyword">and</span> f<span class="token punctuation">:</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span>
    
    bool <span class="token operator">=</span> <span class="token function">file_exists</span><span class="token punctuation">(</span>文件路径<span class="token punctuation">)</span>
    <span class="token keyword">if</span> bool <span class="token keyword">then</span>
        list <span class="token operator">=</span> <span class="token function">readFile</span><span class="token punctuation">(</span>文件路径<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token operator">#</span>list <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">then</span>
            <span class="token comment">--for  i=1, #list,1  do</span>
            <span class="token keyword">for</span>  i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span>  <span class="token keyword">do</span>
                首行读取 <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token function">split</span><span class="token punctuation">(</span>分割符号<span class="token punctuation">)</span>
                <span class="token function">mSleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
            <span class="token keyword">end</span>
        <span class="token keyword">else</span>
            <span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string">&quot;本地文件内容为空！！！&quot;</span><span class="token punctuation">)</span>
            <span class="token function">lua_exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">end</span>
    <span class="token keyword">else</span>
        <span class="token function">dialog</span><span class="token punctuation">(</span><span class="token string">&quot;文件不存在&quot;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">lua_exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span>
    <span class="token keyword">return</span> 首行读取
<span class="token keyword">end</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">调用</p><p>直接使用，例如：<code>local nameuser = 获取本地文件(&#39;/var/mobile/test.txt&#39;,&#39;----&#39;)[1]</code></p></div><h3 id="文件的保存" tabindex="-1"><a class="header-anchor" href="#文件的保存"><span>文件的保存</span></a></h3><div class="hint-container tip"><p class="hint-container-title">说明</p><p>仅仅用来保存文件功能，触动官方文档也有说明</p></div><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">function</span> 记录数据<span class="token punctuation">(</span>记录路径<span class="token punctuation">,</span>记录内容<span class="token punctuation">)</span><span class="token comment">--都为字符串格式</span>
<span class="token keyword">local</span> bool <span class="token operator">=</span> <span class="token function">writeFileString</span><span class="token punctuation">(</span>路径<span class="token operator">..</span>记录路径<span class="token punctuation">,</span>记录内容<span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment">--将 string 内容存入文件，成功返回 true  非 1 不换行</span>
<span class="token keyword">if</span> bool <span class="token keyword">then</span>	
	<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;信息已经成功记录&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="随机组合拼接" tabindex="-1"><a class="header-anchor" href="#随机组合拼接"><span>随机组合拼接</span></a></h2><div class="hint-container tip"><p class="hint-container-title">随机组合</p><p>两种方法在触动精灵的官方文档里面也都有说明。</p><div class="hint-container warning"><p class="hint-container-title">推荐</p><p><strong>优选是第二种方法</strong>，第一种方法会碰到项目循环到同一个随机种子的问题</p></div></div>`,14),X=n("div",{class:"language-lua line-numbers-mode","data-ext":"lua","data-title":"lua"},[n("pre",{class:"language-lua"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(" 获取随机字符"),n("span",{class:"token punctuation"},"("),s("数量起"),n("span",{class:"token punctuation"},","),s("数量止"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"local"),s(" v"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},","),s("随机位置"),n("span",{class:"token punctuation"},","),s(` vv
    `),n("span",{class:"token keyword"},"local"),s(" str1 "),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"abcdefghijklmnopqrstuvwxyz0123456789"'),s(`
    `),n("span",{class:"token keyword"},"local"),s(" sj"),n("span",{class:"token operator"},"="),s("ts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ms"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    math`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"randomseed"),n("span",{class:"token punctuation"},"("),s("sj"),n("span",{class:"token operator"},"*"),n("span",{class:"token number"},"10000"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"-- 随机种子初始化真随机数"),s(`
    `),n("span",{class:"token keyword"},"local"),s(" num "),n("span",{class:"token operator"},"="),s(" math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"random"),n("span",{class:"token punctuation"},"("),s("数量起"),n("span",{class:"token punctuation"},","),s("数量止"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"for"),s(" var"),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s("num "),n("span",{class:"token keyword"},"do"),s(`
        随机位置`),n("span",{class:"token operator"},"="),s("math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"36"),n("span",{class:"token punctuation"},")"),s(`
        vv`),n("span",{class:"token operator"},"="),s("string"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sub"),n("span",{class:"token punctuation"},"("),s("str1"),n("span",{class:"token punctuation"},","),s("随机位置"),n("span",{class:"token punctuation"},","),s("随机位置"),n("span",{class:"token punctuation"},")"),s(`
        v`),n("span",{class:"token operator"},"="),s("v"),n("span",{class:"token operator"},".."),s("vv "),n("span",{class:"token comment"},"--拼接名字"),s(`
    `),n("span",{class:"token keyword"},"end"),s(`
    `),n("span",{class:"token keyword"},"return"),s(` v
`),n("span",{class:"token keyword"},"end"),s(`

获取随机字符`),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"--调用方法"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),M=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(" get_seeda"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(` 
    `),n("span",{class:"token builtin class-name"},"local"),s(" t "),n("span",{class:"token operator"},"="),s(" string.format"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"%f"'),s(", socket.gettime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"))"),s(`
    `),n("span",{class:"token builtin class-name"},"local"),s(" st "),n("span",{class:"token operator"},"="),s(" string.sub"),n("span",{class:"token punctuation"},"("),s("t, string.find"),n("span",{class:"token punctuation"},"("),s("t, "),n("span",{class:"token string"},'"%."'),n("span",{class:"token punctuation"},")"),s(" + "),n("span",{class:"token number"},"1"),s(", -1"),n("span",{class:"token punctuation"},")"),s(` 
    `),n("span",{class:"token builtin class-name"},"return"),s(" tonumber"),n("span",{class:"token punctuation"},"("),s("string.reverse"),n("span",{class:"token punctuation"},"("),s("st"),n("span",{class:"token punctuation"},"))"),s(`
end 

`),n("span",{class:"token keyword"},"function"),s(" 获取随机字符"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},")"),s(`
    math.randomseed`),n("span",{class:"token punctuation"},"("),s("get_seeda"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"))"),s(`
    `),n("span",{class:"token builtin class-name"},"local"),s(" t "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"0"'),s(","),n("span",{class:"token string"},'"1"'),s(","),n("span",{class:"token string"},'"2"'),s(","),n("span",{class:"token string"},'"3"'),s(","),n("span",{class:"token string"},'"4"'),s(","),n("span",{class:"token string"},'"5"'),s(","),n("span",{class:"token string"},'"6"'),s(","),n("span",{class:"token string"},'"7"'),s(","),n("span",{class:"token string"},'"8"'),s(","),n("span",{class:"token string"},'"9"'),s(`,
        `),n("span",{class:"token string"},'"a"'),s(","),n("span",{class:"token string"},'"b"'),s(","),n("span",{class:"token string"},'"c"'),s(","),n("span",{class:"token string"},'"d"'),s(","),n("span",{class:"token string"},'"e"'),s(","),n("span",{class:"token string"},'"f"'),s(","),n("span",{class:"token string"},'"g"'),s(","),n("span",{class:"token string"},'"h"'),s(","),n("span",{class:"token string"},'"i"'),s(","),n("span",{class:"token string"},'"j"'),s(","),n("span",{class:"token string"},'"k"'),s(","),n("span",{class:"token string"},'"l"'),s(","),n("span",{class:"token string"},'"m"'),s(","),n("span",{class:"token string"},'"n"'),s(","),n("span",{class:"token string"},'"o"'),s(","),n("span",{class:"token string"},'"p"'),s(","),n("span",{class:"token string"},'"q"'),s(","),n("span",{class:"token string"},'"r"'),s(","),n("span",{class:"token string"},'"s"'),s(","),n("span",{class:"token string"},'"t"'),s(","),n("span",{class:"token string"},'"u"'),s(","),n("span",{class:"token string"},'"v"'),s(","),n("span",{class:"token string"},'"w"'),s(","),n("span",{class:"token string"},'"x"'),s(","),n("span",{class:"token string"},'"y"'),s(","),n("span",{class:"token string"},'"z"'),s(`,
        `),n("span",{class:"token string"},'"A"'),s(","),n("span",{class:"token string"},'"B"'),s(","),n("span",{class:"token string"},'"C"'),s(","),n("span",{class:"token string"},'"D"'),s(","),n("span",{class:"token string"},'"E"'),s(","),n("span",{class:"token string"},'"F"'),s(","),n("span",{class:"token string"},'"G"'),s(","),n("span",{class:"token string"},'"H"'),s(","),n("span",{class:"token string"},'"I"'),s(","),n("span",{class:"token string"},'"J"'),s(","),n("span",{class:"token string"},'"K"'),s(","),n("span",{class:"token string"},'"L"'),s(","),n("span",{class:"token string"},'"M"'),s(","),n("span",{class:"token string"},'"N"'),s(","),n("span",{class:"token string"},'"O"'),s(","),n("span",{class:"token string"},'"P"'),s(","),n("span",{class:"token string"},'"Q"'),s(","),n("span",{class:"token string"},'"R"'),s(","),n("span",{class:"token string"},'"S"'),s(","),n("span",{class:"token string"},'"T"'),s(","),n("span",{class:"token string"},'"U"'),s(","),n("span",{class:"token string"},'"V"'),s(","),n("span",{class:"token string"},'"W"'),s(","),n("span",{class:"token string"},'"X"'),s(","),n("span",{class:"token string"},'"Y"'),s(","),n("span",{class:"token string"},'"Z"'),s(`,
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token builtin class-name"},"local"),s(" s "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'""'),s(`
    `),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"1"),s(", n "),n("span",{class:"token keyword"},"do"),s(`
        s `),n("span",{class:"token operator"},"="),s(" s "),n("span",{class:"token punctuation"},".."),s(" t"),n("span",{class:"token punctuation"},"["),s("math.random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1,62"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),s(`
    end
    `),n("span",{class:"token builtin class-name"},"return"),s(` s
end

获取随机字符`),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(` --调用方法
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function A(E,B){const i=c("ExternalLinkIcon"),u=c("Badge"),l=c("Tabs");return k(),d("div",null,[m,n("div",b,[g,n("p",null,[s("这里使用的是触动官方的库，相关的参数可以在"),n("a",f,[s("触动官网文档说明"),o(i)]),s("里面查看，优先使用json格式")]),w]),h,n("h2",y,[n("a",q,[n("span",null,[s("时间的获取"),o(u,{text:"小技巧"}),s("（很遗憾，依然不好用😬）")])])]),_,o(l,{id:"157",data:[{id:"方法一"},{id:"方法二"}]},{title0:a(({value:t,isActive:e})=>[s("方法一")]),title1:a(({value:t,isActive:e})=>[s("方法二")]),tab0:a(({value:t,isActive:e})=>[x,T]),tab1:a(({value:t,isActive:e})=>[D]),_:1}),S,o(l,{id:"250",data:[{id:"方法一"},{id:"方法二"}]},{title0:a(({value:t,isActive:e})=>[s("方法一")]),title1:a(({value:t,isActive:e})=>[s("方法二")]),tab0:a(({value:t,isActive:e})=>[X]),tab1:a(({value:t,isActive:e})=>[M]),_:1})])}const I=r(v,[["render",A],["__file","已封装好的函数.html.vue"]]),N=JSON.parse('{"path":"/%E8%A7%A6%E5%8A%A8%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/%E5%B7%B2%E5%B0%81%E8%A3%85%E5%A5%BD%E7%9A%84%E5%87%BD%E6%95%B0.html","title":"LUA - 触动精灵","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"界面 - UI 函数","slug":"界面-ui-函数","link":"#界面-ui-函数","children":[]},{"level":2,"title":"防lua卡流程 以及 协程函数","slug":"防lua卡流程-以及-协程函数","link":"#防lua卡流程-以及-协程函数","children":[]},{"level":2,"title":"界面识别","slug":"界面识别","link":"#界面识别","children":[{"level":3,"title":"文字识别","slug":"文字识别","link":"#文字识别","children":[]},{"level":3,"title":"界面特征识别","slug":"界面特征识别","link":"#界面特征识别","children":[]}]},{"level":2,"title":"时间的获取（很遗憾，依然不好用😬）","slug":"时间的获取-很遗憾-依然不好用","link":"#时间的获取-很遗憾-依然不好用","children":[]},{"level":2,"title":"内容上传","slug":"内容上传","link":"#内容上传","children":[]},{"level":2,"title":"文档操作","slug":"文档操作","link":"#文档操作","children":[{"level":3,"title":"删除首行","slug":"删除首行","link":"#删除首行","children":[]},{"level":3,"title":"根据指定格式读取首行并拆分","slug":"根据指定格式读取首行并拆分","link":"#根据指定格式读取首行并拆分","children":[]},{"level":3,"title":"文件的保存","slug":"文件的保存","link":"#文件的保存","children":[]}]},{"level":2,"title":"随机组合拼接","slug":"随机组合拼接","link":"#随机组合拼接","children":[]}],"readingTime":{"minutes":10.69,"words":3208},"filePathRelative":"触动函数相关/已封装好的函数.md","git":{"updatedTime":1692412701000,"contributors":[{"name":"chenzk14","email":"1140037470@qq.com","commits":1},{"name":"unknown","email":"chenzk14","commits":1}]}}');export{I as comp,N as data};
