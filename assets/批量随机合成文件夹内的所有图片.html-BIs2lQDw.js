import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as e,a as n,e as p}from"./app-CssyecMx.js";const o={},l=p(`<h1 id="一-批量随机合成文件夹内的所有图片" tabindex="-1"><a class="header-anchor" href="#一-批量随机合成文件夹内的所有图片"><span>一. 批量随机合成文件夹内的所有图片</span></a></h1><div class="hint-container tip"><p class="hint-container-title">Document description</p><p>由于最近的项目需要，所以记录下实现的过程</p></div><h2 id="我的思路" tabindex="-1"><a class="header-anchor" href="#我的思路"><span>我的思路</span></a></h2><div class="hint-container warning"><p class="hint-container-title">思路说明</p><ol start="0"><li><p>由于技术受限，以下分为3步</p></li><li><p>书写批量<strong>随机重命名文件</strong>批处理，用于随机文件的排序，方便py脚本自动拼接的随机性</p></li><li><p>书写<strong>图片拼接py脚本</strong></p></li><li><p>书写<strong>循环py脚本</strong>批处理</p></li></ol></div><h3 id="_0-环境以及安装说明" tabindex="-1"><a class="header-anchor" href="#_0-环境以及安装说明"><span>0. 环境以及安装说明</span></a></h3><div class="hint-container tip"><p class="hint-container-title">其他说明</p><ol><li>需要先安装<strong>Python</strong>环境，并且安装 <strong>pillow</strong></li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># pip install pillow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>需要将 <strong><code>图片文件</code></strong>、<strong><code>.py文件</code></strong>、<strong><code>.bat文件</code></strong> 放置在同一目录下面，<strong>最后运行<em>循环批处理</em> 即可</strong></li></ol></div><h3 id="_1-随机重命名文件批处理代码" tabindex="-1"><a class="header-anchor" href="#_1-随机重命名文件批处理代码"><span>1. 随机重命名文件批处理代码</span></a></h3><blockquote><p>将以下代码保存为 <strong><code>.bat</code></strong> 文件</p></blockquote><div class="language-batch line-numbers-mode" data-ext="batch" data-title="batch"><pre class="language-batch"><code><span class="token operator">@</span><span class="token command"><span class="token keyword">echo</span> off</span><span class="token operator">&amp;</span><span class="token command"><span class="token keyword">setlocal</span> EnableDelayedExpansion</span>
<span class="token command"><span class="token keyword">set</span> <span class="token variable">n</span><span class="token operator">=</span><span class="token number">0</span></span>
<span class="token command"><span class="token keyword">for</span> <span class="token parameter attr-name">/f</span> <span class="token string">&quot;delims=&quot;</span> <span class="token variable">%%i</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">&#39;</span>dir <span class="token parameter attr-name">/b</span> *.jpg<span class="token punctuation">&#39;</span><span class="token punctuation">)</span> <span class="token keyword">do</span></span> <span class="token command"><span class="token keyword">ren</span> <span class="token string">&quot;%%i&quot;</span> <span class="token string">&quot;R%%~ni%%~xi&quot;</span></span>
<span class="token command"><span class="token keyword">for</span> <span class="token parameter attr-name">/f</span> <span class="token string">&quot;delims=&quot;</span> <span class="token variable">%%i</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">&#39;</span>dir <span class="token parameter attr-name">/b</span> *.jpg<span class="token punctuation">&#39;</span><span class="token punctuation">)</span> <span class="token keyword">do</span></span> <span class="token command"><span class="token keyword">set</span> <span class="token parameter attr-name">/a</span> <span class="token variable">n</span><span class="token operator">+=</span><span class="token number">1</span></span>
<span class="token command"><span class="token keyword">for</span> <span class="token parameter attr-name">/f</span> <span class="token string">&quot;delims=&quot;</span> <span class="token variable">%%i</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">&#39;</span>dir <span class="token parameter attr-name">/b</span> *.jpg<span class="token punctuation">&#39;</span><span class="token punctuation">)</span> <span class="token keyword">do</span></span> <span class="token punctuation">(</span>
<span class="token command"><span class="token keyword">call</span><span class="token label property">:RR</span></span>
<span class="token command"><span class="token keyword">ren</span> <span class="token string">&quot;%%i&quot;</span> <span class="token string">&quot;!R!%%~xi&quot;</span></span>
<span class="token punctuation">)</span>
<span class="token command"><span class="token keyword">exit</span></span>
<span class="token label property">:RR</span>
<span class="token command"><span class="token keyword">set</span> <span class="token parameter attr-name">/a</span> <span class="token variable">R</span><span class="token operator">=</span><span class="token variable">%random%</span><span class="token variable">%%n%</span><span class="token operator">+</span><span class="token number">1</span></span>
<span class="token command"><span class="token keyword">if</span> <span class="token variable">!R!==!W%R%!</span></span> <span class="token command"><span class="token keyword">Goto</span><span class="token label property">:RR</span></span>
<span class="token command"><span class="token keyword">set</span> <span class="token parameter attr-name">/a</span> W<span class="token variable">!R!=!R!</span></span>
<span class="token command"><span class="token keyword">Goto</span><span class="token label property">:eof</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-循环运行批处理代码" tabindex="-1"><a class="header-anchor" href="#_2-循环运行批处理代码"><span>2. 循环运行批处理代码</span></a></h3><blockquote><p>将以下代码保存为 <strong><code>.bat</code></strong> 文件</p></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>choice /t 2 /d y /n &gt;nul</code> - 其中 /t 2 表示每次运行间隔次数，可设置为 0</p><p><code>merge2.py</code> - 你的py脚本</p></div><div class="language-batch line-numbers-mode" data-ext="batch" data-title="batch"><pre class="language-batch"><code><span class="token operator">@</span><span class="token command"><span class="token keyword">echo</span> off</span>
<span class="token label property">:start</span>
<span class="token command"><span class="token keyword">merge2</span>.py</span>
<span class="token command"><span class="token keyword">choice</span> <span class="token parameter attr-name">/t</span> <span class="token number">2</span> <span class="token parameter attr-name">/d</span> y <span class="token parameter attr-name">/n</span> &gt;nul  </span>
<span class="token command"><span class="token keyword">goto</span> start</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-python代码" tabindex="-1"><a class="header-anchor" href="#_3-python代码"><span>3. Python代码</span></a></h3><blockquote><p>将以下代码保存为 <strong><code>.py</code></strong> 文件</p></blockquote><table><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">示例</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>IMAGES_PATH</td><td style="text-align:center;">str</td><td style="text-align:center;">D:\\\\1\\\\2\\\\</td><td style="text-align:center;">输入文件的路径</td></tr><tr><td>dir_path</td><td style="text-align:center;">str</td><td style="text-align:center;">D:\\\\1\\\\new\\\\</td><td style="text-align:center;">输出文件的路径</td></tr><tr><td>IMAGE_SIZE</td><td style="text-align:center;">int</td><td style="text-align:center;">300</td><td style="text-align:center;">每张图片的大小</td></tr><tr><td>IMAGE_ROW</td><td style="text-align:center;">int</td><td style="text-align:center;">4</td><td style="text-align:center;">行数量</td></tr><tr><td>IMAGE_COLUMN</td><td style="text-align:center;">int</td><td style="text-align:center;">4</td><td style="text-align:center;">列数量</td></tr><tr><td>os.system()</td><td style="text-align:center;">str</td><td style="text-align:center;">D:/1/2/run.bat</td><td style="text-align:center;">批处理文件的路径</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">配置说明：</p><p><strong>文件数量必须是【整数倍】，否则无法拼接</strong></p></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> PIL<span class="token punctuation">.</span>Image <span class="token keyword">as</span> Image
<span class="token keyword">import</span> os
<span class="token keyword">import</span> string
<span class="token keyword">import</span> random

<span class="token comment">#先安装Python，再安装pillow    -- [pip install pillow]   这是必须步骤。</span>
<span class="token comment">#.bat文件必须和.py文件放置在一个目录下面,否则bat文件无法找到文件</span>
<span class="token comment">#py文件需要设置输入路径和输出路径</span>
<span class="token comment">#文件必须是【整数倍】，否则无法拼接</span>

dir_path <span class="token operator">=</span> <span class="token string">&#39;D:\\\\1\\\\new\\\\&#39;</span>  <span class="token comment">#输出路径</span>
dir_name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#随机字符</span>


IMAGES_PATH <span class="token operator">=</span> <span class="token string">&#39;D:\\\\1\\\\2\\\\&#39;</span>  <span class="token comment"># 图片集地址</span>

IMAGES_FORMAT <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 图片格式</span>
IMAGE_SIZE <span class="token operator">=</span> <span class="token number">300</span>  <span class="token comment"># 每张小图片的大小</span>
IMAGE_ROW <span class="token operator">=</span> <span class="token number">4</span>  <span class="token comment"># 图片间隔，也就是合并成一张图后，一共有几行</span>
IMAGE_COLUMN <span class="token operator">=</span> <span class="token number">4</span>  <span class="token comment"># 图片间隔，也就是合并成一张图后，一共有几列</span>
IMAGE_SAVE_PATH <span class="token operator">=</span> dir_path<span class="token operator">+</span>dir_name<span class="token operator">+</span><span class="token string">&#39;.jpg&#39;</span>  <span class="token comment"># 图片转换后的地址</span>



<span class="token comment"># 获取图片集地址下的所有图片名称</span>
image_names <span class="token operator">=</span> <span class="token punctuation">[</span>name <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>IMAGES_PATH<span class="token punctuation">)</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> IMAGES_FORMAT <span class="token keyword">if</span>
               os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> item<span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>image_names<span class="token punctuation">)</span>
<span class="token comment"># 简单的对于参数的设定和实际图片集的大小进行数量判断</span>
<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>image_names<span class="token punctuation">)</span> <span class="token operator">!=</span> IMAGE_ROW <span class="token operator">*</span> IMAGE_COLUMN<span class="token punctuation">:</span>
    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;合成图片的参数和要求的数量不能匹配！&quot;</span><span class="token punctuation">)</span>
    

<span class="token comment"># 定义图像拼接函数</span>
<span class="token keyword">def</span> <span class="token function">image_compose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;D:/1/2/run.bat&#39;</span><span class="token punctuation">)</span>
    to_image <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">&#39;RGB&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>IMAGE_COLUMN <span class="token operator">*</span> IMAGE_SIZE<span class="token punctuation">,</span> IMAGE_ROW <span class="token operator">*</span> IMAGE_SIZE<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 创建一个新图</span>
    <span class="token comment"># 循环遍历，把每张图片按顺序粘贴到对应位置上</span>
    <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> IMAGE_ROW <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> IMAGE_COLUMN <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            from_image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>IMAGES_PATH <span class="token operator">+</span> image_names<span class="token punctuation">[</span>IMAGE_COLUMN <span class="token operator">*</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resize<span class="token punctuation">(</span>
                <span class="token punctuation">(</span>IMAGE_SIZE<span class="token punctuation">,</span> IMAGE_SIZE<span class="token punctuation">)</span><span class="token punctuation">,</span> Image<span class="token punctuation">.</span>ANTIALIAS<span class="token punctuation">)</span>
            to_image<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>from_image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> IMAGE_SIZE<span class="token punctuation">,</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> IMAGE_SIZE<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> to_image<span class="token punctuation">.</span>save<span class="token punctuation">(</span>IMAGE_SAVE_PATH<span class="token punctuation">)</span>  <span class="token comment"># 保存新图</span>

image_compose<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 调用函数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-文件结构如图" tabindex="-1"><a class="header-anchor" href="#_4-文件结构如图"><span>4. 文件结构如图</span></a></h3>`,19),c=n("img",{src:"",alt:"",loading:"lazy"},null,-1),i=["src"],r=n("img",{src:"",alt:"",loading:"lazy"},null,-1),d=["src"],u=n("img",{src:"",alt:"",loading:"lazy"},null,-1),k=["src"];function m(s,v){return t(),e("div",null,[l,n("p",null,[c,n("img",{class:"py_pic",src:s.$withBase("/py1.png")},null,8,i)]),n("p",null,[r,n("img",{class:"py_pic",src:s.$withBase("/py2.png")},null,8,d)]),n("p",null,[u,n("img",{class:"py_pic",src:s.$withBase("/py3.png")},null,8,k)])])}const y=a(o,[["render",m],["__file","批量随机合成文件夹内的所有图片.html.vue"]]),h=JSON.parse('{"path":"/Python%E8%84%9A%E6%9C%AC%E7%9B%B8%E5%85%B3/%E6%89%B9%E9%87%8F%E9%9A%8F%E6%9C%BA%E5%90%88%E6%88%90%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E7%9A%84%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87.html","title":"一. 批量随机合成文件夹内的所有图片","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"我的思路","slug":"我的思路","link":"#我的思路","children":[{"level":3,"title":"0. 环境以及安装说明","slug":"_0-环境以及安装说明","link":"#_0-环境以及安装说明","children":[]},{"level":3,"title":"1. 随机重命名文件批处理代码","slug":"_1-随机重命名文件批处理代码","link":"#_1-随机重命名文件批处理代码","children":[]},{"level":3,"title":"2. 循环运行批处理代码","slug":"_2-循环运行批处理代码","link":"#_2-循环运行批处理代码","children":[]},{"level":3,"title":"3. Python代码","slug":"_3-python代码","link":"#_3-python代码","children":[]},{"level":3,"title":"4. 文件结构如图","slug":"_4-文件结构如图","link":"#_4-文件结构如图","children":[]}]}],"readingTime":{"minutes":2.85,"words":856},"filePathRelative":"Python脚本相关/批量随机合成文件夹内的所有图片.md","git":{"updatedTime":1681111454000,"contributors":[{"name":"unknown","email":"chenzk14","commits":1}]}}');export{y as comp,h as data};
